@page "/max-supplies-organizations"
@inject IEnterpriseWarehouseApiWrapper EnterpriseWarehouseApi

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h4>Организации с максимальным кол-вом поставок за промежуток времени</h4>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="OrganizationDTO"
                  Data="Organizations"
                  Responsive
                  Striped>
            <DataGridColumns>
                <DataGridColumn TItem="OrganizationDTO"
                                Field="@nameof(OrganizationDTO.Id)"
                                Caption="Идентификатор организации">
                </DataGridColumn>
                <DataGridColumn TItem="OrganizationDTO"
                                Field="@nameof(OrganizationDTO.Name)"
                                Caption="Название">
                </DataGridColumn>
                <DataGridColumn TItem="OrganizationDTO"
                                Field="@nameof(OrganizationDTO.Address)"
                                Caption="Адрес">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>
<Div>
    <Label>Первая дата:</Label>
    <InputDate @bind-Value="FirstDate" />

    <Label>Вторая дата:</Label>
    <InputDate @bind-Value="SecondDate" />

    <Button Color="Color.Primary" Clicked="RefreshOrganizationCollection">Поиск</Button>
</Div>


@code {
    private IEnumerable<OrganizationDTO> Organizations { get; set; } = [];
    private DateTime FirstDate { get; set; } = DateTime.Today;
    private DateTime SecondDate { get; set; } = DateTime.Today;

    private async Task RefreshOrganizationCollection() => Organizations = await EnterpriseWarehouseApi.GetMaxSuppliesOrganizations(FirstDate, SecondDate);
}

